name: NodeJS Build Multiple Architectures

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  create-release:
    name: Create Release and Tag Number
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version_number.outputs.version }}
    steps:
      - name: Set Time Zone
        uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "America/Toronto"
      - name: Generate Version Number
        run: |
          echo "CUSTOMED_VERSION_NUMBER=v$(date +"%Y%m%d_%H%M")" >> $GITHUB_ENV
      - name: Version Number Output
        id: version_number
        run: |
          echo "Printing Customed Version Value: ${{ env.CUSTOMED_VERSION_NUMBER }}"
          echo "version=${{ env.CUSTOMED_VERSION_NUMBER }}" >> $GITHUB_OUTPUT
      - name: Checkout
        uses: actions/checkout@v2
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.CUSTOMED_VERSION_NUMBER }}
          token: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}

  build-multi-arch:
    name: Build Multi Architecture NodeJS
    runs-on: ubuntu-latest
    needs: [create-release]
    steps:
      # Get the repo's code
      - name: Checkout
        uses: actions/checkout@v3
      # Update the html file inside the repo
      #   - name: Update the html file inside the repo
      #     run: |
      #       sed -i "s/VERSION_PLACE_HOLDER/${{ needs.create-release.outputs.version }}/g" ./src/index.html
      #       cat ./src/index.html
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}

      - name: Set lower case owner name
        run: |
          echo "REPOSITORY_OWNER_LOWER=${OWNER,,}" >> $GITHUB_ENV
        env:
          OWNER: ${{ github.repository_owner }}
